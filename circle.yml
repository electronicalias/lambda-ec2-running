machine:
  environment:
    DELETE: false
    VER: "version_${CIRCLE_BUILD_NUM}"

dependencies:
  pre:
    - wget https://releases.hashicorp.com/terraform/0.7.4/terraform_0.7.4_linux_amd64.zip
    - unzip terraform_0.7.4_linux_amd64.zip
    - cd lambdas && zip -r ../lambdas.zip * -x *.git*
    - mkdir "$CIRCLE_BRANCH"
    - touch env.tfvars
    - echo "account_id = \"632826021673\"" > env.tfvars

test:
  override:
    - ./terraform remote config -backend=S3 -backend-config="bucket=$BUCKET_NAME" -backend-config="key=$CIRCLE_BRANCH/terraform.tfstate" -backend-config="region=$RUN_REGION"
    - ./terraform get
    - ./terraform plan -var "build_version=${VER}" -var "run_region=$RUN_REGION" -var-file="env.tfvars" -var-file="variables.tf" -out="$(if [[ "$CIRCLE_BRANCH" != "master" ]]; then echo "develop"; else echo "master"; fi)/terraform.plan"

deployment:
  feature:
    branch: /feature_.*/
    commands:
      - ./terraform apply $(if [[ "$CIRCLE_BRANCH" != "master" ]]; then echo "develop"; else echo "master"; fi)/terraform.plan
      - ./terraform remote push
  development:
    branch: develop
    commands:
      - ./terraform apply $(if [[ "$CIRCLE_BRANCH" != "master" ]]; then echo "develop"; else echo "master"; fi)/terraform.plan
      - ./terraform remote push
  production:
    branch: master
    commands:
      - if [[ "$DELETE" != "true" ]]; then
          ./terraform apply $(if [[ "$CIRCLE_BRANCH" != "master" ]]; then echo "develop"; else echo "master"; fi)/terraform.plan;
        fi
      - if [[ "$DELETE" != "true" ]]; then
          ./terraform remote push;
        fi
      - if [[ "$DELETE" == "true" ]]; then
          ./terraform plan -var "build_version=${VER}" -var "run_region=$RUN_REGION" -var-file="env.tfvars" -var-file="variables.tf" -out="$(if [[ "$CIRCLE_BRANCH" != "master" ]]; then echo "develop"; else echo "master"; fi)/terraform_destroy.plan" -destroy;
        fi
      - if [[ "$DELETE" == "true" ]]; then
          ./terraform destroy -var "build_version=${VER}" -var "run_region=$RUN_REGION" -force;
        fi